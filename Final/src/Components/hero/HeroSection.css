video{
  /*The CSS object-fit property is used to specify how an <img> or <video> should be resized to fit its container.*/
    object-fit: cover; /* Crop the video so that i fits the container*/
    width: 100%;
    height: 100%;
    position: fixed; /*Stays in its place even after scrolling*/
    z-index: -1; /* To ensure that it doesn't cover other stuff*/
}

.hero-container {
    height: 100vh;
    width: 100%;
    display: flex; /* PLace all elements on the same line */
    flex-direction: column; /*Tat7 baad*/
    justify-content: center; /* Place a group of objects in the center par rapport a l'axe des x*/
    align-items: center; /*Place a group of objects in the center par rapport a l'axe des Y*/
    box-shadow: inset 0 0 0 1000px rgba(0, 0, 0, 0.2);
    object-fit: contain; /* the image keeps its aspect ratio, but is resized to fit within the given dimension*/
}
  
.hero-container > h1 {
    color: #fff;
    font-size: 100px;
    margin-top: -100px; /*Not recommended */
  }
  
  .hero-container > p {
    margin-top: 8px;
    color: #acbca0;
    font-size: 32px;
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande',
      'Lucida Sans', Arial, sans-serif;
  }
  
  .hero-btns {
    margin-top: 32px;
  }
  
  .hero-btns .btn {
    margin: 6px;
  }
  
  .fa-play-circle {
    margin-left: 4px;
  }
  
  @media screen and (max-width: 960px) {
    .hero-container > h1 {
      font-size: 70px;
      margin-top: -150px;
    }
  }
  
  @media screen and (max-width: 768px) {
    .hero-container > h1 {
      font-size: 50px;
      margin-top: -100px;
    }
  
.hero-container > p {
    font-size: 30px;
}
  
.btn-mobile {
  /*Displays an element as a block element (like <p>). It starts on a new line, and takes up the whole width*/
    display: block; 
    text-decoration: none;
}

.btn {
    width: 100%;
  }
}